// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/imu.proto
// Protobuf C++ Version: 5.27.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fimu_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fimu_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "proto/vector.pb.h"
#include "proto/quaternion.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fimu_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fimu_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2fimu_2eproto;
namespace kevin {
class Imu;
struct ImuDefaultTypeInternal;
extern ImuDefaultTypeInternal _Imu_default_instance_;
}  // namespace kevin
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kevin {

// ===================================================================


// -------------------------------------------------------------------

class Imu final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kevin.Imu) */ {
 public:
  inline Imu() : Imu(nullptr) {}
  ~Imu() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Imu(
      ::google::protobuf::internal::ConstantInitialized);

  inline Imu(const Imu& from) : Imu(nullptr, from) {}
  inline Imu(Imu&& from) noexcept
      : Imu(nullptr, std::move(from)) {}
  inline Imu& operator=(const Imu& from) {
    CopyFrom(from);
    return *this;
  }
  inline Imu& operator=(Imu&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Imu& default_instance() {
    return *internal_default_instance();
  }
  static inline const Imu* internal_default_instance() {
    return reinterpret_cast<const Imu*>(
        &_Imu_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Imu& a, Imu& b) { a.Swap(&b); }
  inline void Swap(Imu* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Imu* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Imu* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Imu>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Imu& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Imu& from) { Imu::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Imu* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "kevin.Imu"; }

 protected:
  explicit Imu(::google::protobuf::Arena* arena);
  Imu(::google::protobuf::Arena* arena, const Imu& from);
  Imu(::google::protobuf::Arena* arena, Imu&& from) noexcept
      : Imu(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccelsFieldNumber = 1,
    kGyrosFieldNumber = 2,
    kMagsFieldNumber = 3,
    kOrientationFieldNumber = 4,
    kImuTempFieldNumber = 5,
    kTemperatureFieldNumber = 6,
    kPressureFieldNumber = 7,
    kAltitudeFieldNumber = 8,
    kTimestampFieldNumber = 10,
    kCalibratedFieldNumber = 9,
  };
  // .Vector accels = 1;
  bool has_accels() const;
  void clear_accels() ;
  const ::Vector& accels() const;
  PROTOBUF_NODISCARD ::Vector* release_accels();
  ::Vector* mutable_accels();
  void set_allocated_accels(::Vector* value);
  void unsafe_arena_set_allocated_accels(::Vector* value);
  ::Vector* unsafe_arena_release_accels();

  private:
  const ::Vector& _internal_accels() const;
  ::Vector* _internal_mutable_accels();

  public:
  // .Vector gyros = 2;
  bool has_gyros() const;
  void clear_gyros() ;
  const ::Vector& gyros() const;
  PROTOBUF_NODISCARD ::Vector* release_gyros();
  ::Vector* mutable_gyros();
  void set_allocated_gyros(::Vector* value);
  void unsafe_arena_set_allocated_gyros(::Vector* value);
  ::Vector* unsafe_arena_release_gyros();

  private:
  const ::Vector& _internal_gyros() const;
  ::Vector* _internal_mutable_gyros();

  public:
  // .Vector mags = 3;
  bool has_mags() const;
  void clear_mags() ;
  const ::Vector& mags() const;
  PROTOBUF_NODISCARD ::Vector* release_mags();
  ::Vector* mutable_mags();
  void set_allocated_mags(::Vector* value);
  void unsafe_arena_set_allocated_mags(::Vector* value);
  ::Vector* unsafe_arena_release_mags();

  private:
  const ::Vector& _internal_mags() const;
  ::Vector* _internal_mutable_mags();

  public:
  // .Quaternion orientation = 4;
  bool has_orientation() const;
  void clear_orientation() ;
  const ::Quaternion& orientation() const;
  PROTOBUF_NODISCARD ::Quaternion* release_orientation();
  ::Quaternion* mutable_orientation();
  void set_allocated_orientation(::Quaternion* value);
  void unsafe_arena_set_allocated_orientation(::Quaternion* value);
  ::Quaternion* unsafe_arena_release_orientation();

  private:
  const ::Quaternion& _internal_orientation() const;
  ::Quaternion* _internal_mutable_orientation();

  public:
  // double imu_temp = 5;
  void clear_imu_temp() ;
  double imu_temp() const;
  void set_imu_temp(double value);

  private:
  double _internal_imu_temp() const;
  void _internal_set_imu_temp(double value);

  public:
  // double temperature = 6;
  void clear_temperature() ;
  double temperature() const;
  void set_temperature(double value);

  private:
  double _internal_temperature() const;
  void _internal_set_temperature(double value);

  public:
  // double pressure = 7;
  void clear_pressure() ;
  double pressure() const;
  void set_pressure(double value);

  private:
  double _internal_pressure() const;
  void _internal_set_pressure(double value);

  public:
  // double altitude = 8;
  void clear_altitude() ;
  double altitude() const;
  void set_altitude(double value);

  private:
  double _internal_altitude() const;
  void _internal_set_altitude(double value);

  public:
  // uint64 timestamp = 10;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // bool calibrated = 9;
  void clear_calibrated() ;
  bool calibrated() const;
  void set_calibrated(bool value);

  private:
  bool _internal_calibrated() const;
  void _internal_set_calibrated(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kevin.Imu)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 4,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Imu_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Imu& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::Vector* accels_;
    ::Vector* gyros_;
    ::Vector* mags_;
    ::Quaternion* orientation_;
    double imu_temp_;
    double temperature_;
    double pressure_;
    double altitude_;
    ::uint64_t timestamp_;
    bool calibrated_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fimu_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Imu

// .Vector accels = 1;
inline bool Imu::has_accels() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.accels_ != nullptr);
  return value;
}
inline const ::Vector& Imu::_internal_accels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Vector* p = _impl_.accels_;
  return p != nullptr ? *p : reinterpret_cast<const ::Vector&>(::_Vector_default_instance_);
}
inline const ::Vector& Imu::accels() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kevin.Imu.accels)
  return _internal_accels();
}
inline void Imu::unsafe_arena_set_allocated_accels(::Vector* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.accels_);
  }
  _impl_.accels_ = reinterpret_cast<::Vector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kevin.Imu.accels)
}
inline ::Vector* Imu::release_accels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Vector* released = _impl_.accels_;
  _impl_.accels_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Vector* Imu::unsafe_arena_release_accels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kevin.Imu.accels)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Vector* temp = _impl_.accels_;
  _impl_.accels_ = nullptr;
  return temp;
}
inline ::Vector* Imu::_internal_mutable_accels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.accels_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Vector>(GetArena());
    _impl_.accels_ = reinterpret_cast<::Vector*>(p);
  }
  return _impl_.accels_;
}
inline ::Vector* Imu::mutable_accels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Vector* _msg = _internal_mutable_accels();
  // @@protoc_insertion_point(field_mutable:kevin.Imu.accels)
  return _msg;
}
inline void Imu::set_allocated_accels(::Vector* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.accels_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.accels_ = reinterpret_cast<::Vector*>(value);
  // @@protoc_insertion_point(field_set_allocated:kevin.Imu.accels)
}

// .Vector gyros = 2;
inline bool Imu::has_gyros() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.gyros_ != nullptr);
  return value;
}
inline const ::Vector& Imu::_internal_gyros() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Vector* p = _impl_.gyros_;
  return p != nullptr ? *p : reinterpret_cast<const ::Vector&>(::_Vector_default_instance_);
}
inline const ::Vector& Imu::gyros() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kevin.Imu.gyros)
  return _internal_gyros();
}
inline void Imu::unsafe_arena_set_allocated_gyros(::Vector* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.gyros_);
  }
  _impl_.gyros_ = reinterpret_cast<::Vector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kevin.Imu.gyros)
}
inline ::Vector* Imu::release_gyros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Vector* released = _impl_.gyros_;
  _impl_.gyros_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Vector* Imu::unsafe_arena_release_gyros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kevin.Imu.gyros)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Vector* temp = _impl_.gyros_;
  _impl_.gyros_ = nullptr;
  return temp;
}
inline ::Vector* Imu::_internal_mutable_gyros() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.gyros_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Vector>(GetArena());
    _impl_.gyros_ = reinterpret_cast<::Vector*>(p);
  }
  return _impl_.gyros_;
}
inline ::Vector* Imu::mutable_gyros() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::Vector* _msg = _internal_mutable_gyros();
  // @@protoc_insertion_point(field_mutable:kevin.Imu.gyros)
  return _msg;
}
inline void Imu::set_allocated_gyros(::Vector* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.gyros_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.gyros_ = reinterpret_cast<::Vector*>(value);
  // @@protoc_insertion_point(field_set_allocated:kevin.Imu.gyros)
}

// .Vector mags = 3;
inline bool Imu::has_mags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mags_ != nullptr);
  return value;
}
inline const ::Vector& Imu::_internal_mags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Vector* p = _impl_.mags_;
  return p != nullptr ? *p : reinterpret_cast<const ::Vector&>(::_Vector_default_instance_);
}
inline const ::Vector& Imu::mags() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kevin.Imu.mags)
  return _internal_mags();
}
inline void Imu::unsafe_arena_set_allocated_mags(::Vector* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mags_);
  }
  _impl_.mags_ = reinterpret_cast<::Vector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kevin.Imu.mags)
}
inline ::Vector* Imu::release_mags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Vector* released = _impl_.mags_;
  _impl_.mags_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Vector* Imu::unsafe_arena_release_mags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kevin.Imu.mags)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Vector* temp = _impl_.mags_;
  _impl_.mags_ = nullptr;
  return temp;
}
inline ::Vector* Imu::_internal_mutable_mags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mags_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Vector>(GetArena());
    _impl_.mags_ = reinterpret_cast<::Vector*>(p);
  }
  return _impl_.mags_;
}
inline ::Vector* Imu::mutable_mags() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::Vector* _msg = _internal_mutable_mags();
  // @@protoc_insertion_point(field_mutable:kevin.Imu.mags)
  return _msg;
}
inline void Imu::set_allocated_mags(::Vector* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mags_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.mags_ = reinterpret_cast<::Vector*>(value);
  // @@protoc_insertion_point(field_set_allocated:kevin.Imu.mags)
}

// .Quaternion orientation = 4;
inline bool Imu::has_orientation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.orientation_ != nullptr);
  return value;
}
inline const ::Quaternion& Imu::_internal_orientation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Quaternion* p = _impl_.orientation_;
  return p != nullptr ? *p : reinterpret_cast<const ::Quaternion&>(::_Quaternion_default_instance_);
}
inline const ::Quaternion& Imu::orientation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kevin.Imu.orientation)
  return _internal_orientation();
}
inline void Imu::unsafe_arena_set_allocated_orientation(::Quaternion* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.orientation_);
  }
  _impl_.orientation_ = reinterpret_cast<::Quaternion*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kevin.Imu.orientation)
}
inline ::Quaternion* Imu::release_orientation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::Quaternion* released = _impl_.orientation_;
  _impl_.orientation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Quaternion* Imu::unsafe_arena_release_orientation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kevin.Imu.orientation)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::Quaternion* temp = _impl_.orientation_;
  _impl_.orientation_ = nullptr;
  return temp;
}
inline ::Quaternion* Imu::_internal_mutable_orientation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.orientation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Quaternion>(GetArena());
    _impl_.orientation_ = reinterpret_cast<::Quaternion*>(p);
  }
  return _impl_.orientation_;
}
inline ::Quaternion* Imu::mutable_orientation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::Quaternion* _msg = _internal_mutable_orientation();
  // @@protoc_insertion_point(field_mutable:kevin.Imu.orientation)
  return _msg;
}
inline void Imu::set_allocated_orientation(::Quaternion* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.orientation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.orientation_ = reinterpret_cast<::Quaternion*>(value);
  // @@protoc_insertion_point(field_set_allocated:kevin.Imu.orientation)
}

// double imu_temp = 5;
inline void Imu::clear_imu_temp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.imu_temp_ = 0;
}
inline double Imu::imu_temp() const {
  // @@protoc_insertion_point(field_get:kevin.Imu.imu_temp)
  return _internal_imu_temp();
}
inline void Imu::set_imu_temp(double value) {
  _internal_set_imu_temp(value);
  // @@protoc_insertion_point(field_set:kevin.Imu.imu_temp)
}
inline double Imu::_internal_imu_temp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.imu_temp_;
}
inline void Imu::_internal_set_imu_temp(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.imu_temp_ = value;
}

// double temperature = 6;
inline void Imu::clear_temperature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.temperature_ = 0;
}
inline double Imu::temperature() const {
  // @@protoc_insertion_point(field_get:kevin.Imu.temperature)
  return _internal_temperature();
}
inline void Imu::set_temperature(double value) {
  _internal_set_temperature(value);
  // @@protoc_insertion_point(field_set:kevin.Imu.temperature)
}
inline double Imu::_internal_temperature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.temperature_;
}
inline void Imu::_internal_set_temperature(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.temperature_ = value;
}

// double pressure = 7;
inline void Imu::clear_pressure() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pressure_ = 0;
}
inline double Imu::pressure() const {
  // @@protoc_insertion_point(field_get:kevin.Imu.pressure)
  return _internal_pressure();
}
inline void Imu::set_pressure(double value) {
  _internal_set_pressure(value);
  // @@protoc_insertion_point(field_set:kevin.Imu.pressure)
}
inline double Imu::_internal_pressure() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pressure_;
}
inline void Imu::_internal_set_pressure(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pressure_ = value;
}

// double altitude = 8;
inline void Imu::clear_altitude() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.altitude_ = 0;
}
inline double Imu::altitude() const {
  // @@protoc_insertion_point(field_get:kevin.Imu.altitude)
  return _internal_altitude();
}
inline void Imu::set_altitude(double value) {
  _internal_set_altitude(value);
  // @@protoc_insertion_point(field_set:kevin.Imu.altitude)
}
inline double Imu::_internal_altitude() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.altitude_;
}
inline void Imu::_internal_set_altitude(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.altitude_ = value;
}

// bool calibrated = 9;
inline void Imu::clear_calibrated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.calibrated_ = false;
}
inline bool Imu::calibrated() const {
  // @@protoc_insertion_point(field_get:kevin.Imu.calibrated)
  return _internal_calibrated();
}
inline void Imu::set_calibrated(bool value) {
  _internal_set_calibrated(value);
  // @@protoc_insertion_point(field_set:kevin.Imu.calibrated)
}
inline bool Imu::_internal_calibrated() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.calibrated_;
}
inline void Imu::_internal_set_calibrated(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.calibrated_ = value;
}

// uint64 timestamp = 10;
inline void Imu::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
}
inline ::uint64_t Imu::timestamp() const {
  // @@protoc_insertion_point(field_get:kevin.Imu.timestamp)
  return _internal_timestamp();
}
inline void Imu::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:kevin.Imu.timestamp)
}
inline ::uint64_t Imu::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void Imu::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace kevin


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_proto_2fimu_2eproto_2epb_2eh
